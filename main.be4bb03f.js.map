{"version":3,"sources":["scripts/main.js"],"names":["square","messageStart","document","querySelector","messageWin","messageLose","startButton","gameScore","cells","querySelectorAll","width","score","generateNewCell","elements","randomNumber","Math","random","randomIndex","floor","length","innerHTML","className","checkIfGameOver","isStartButton","resetInfo","forEach","cell","lastClass","classList","remove","updateInfo","item","mergeRow","mergedTotal","i","parentElement","parseInt","isPossiblePlay","checkIfWin","mergeColumn","moveRight","totalOne","totalTwo","totalThree","totalFour","filteredRow","filter","num","newRow","Array","fill","concat","moveLeft","zeros","moveUp","filteredColumn","newColumn","moveDown","move","body","addEventListener","e","key","add","emptyCells","target"],"mappings":"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","file":"main.be4bb03f.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\nconst startButton = document.querySelector('.button');\nconst gameScore = document.querySelector('.game-score');\nconst cells = document.querySelectorAll('td');\nconst width = 4;\nlet square;\nlet score = 0;\n\nfunction generateNewCell(elements) {\n  const randomNumber = ((Math.random() * 100) < 10) ? 4 : 2;\n  const randomIndex = Math.floor(Math.random() * cells.length);\n\n  if (cells[randomIndex].innerHTML === '') {\n    cells[randomIndex].innerHTML = randomNumber;\n    cells[randomIndex].className = `field-cell field-cell--${randomNumber}`;\n  } else {\n    generateNewCell(elements);\n    checkIfGameOver();\n  }\n}\n\nlet isStartButton = true;\n\nstartButton.addEventListener('click', e => {\n  if (isStartButton) {\n    e.target.className = 'button restart';\n    e.target.innerHTML = 'Restart';\n    messageStart.classList.add('hidden');\n    isStartButton = false;\n\n    for (const cell of cells) {\n      square = cell;\n\n      for (let i = 0; i < 16; i++) {\n        square.innerHTML = '';\n      }\n    }\n\n    generateNewCell(cells);\n    generateNewCell(cells);\n    cells.forEach(cell => updateInfo(cell));\n  } else {\n    e.target.className = 'button start';\n    e.target.innerHTML = 'Start';\n    messageStart.classList.remove('hidden');\n    messageLose.classList.add('hidden');\n    isStartButton = true;\n    resetInfo();\n  }\n});\n\nmove();\n\nfunction resetInfo() {\n  const existedCells = document.querySelectorAll('[class*=\"field-cell--\"]');\n\n  existedCells.forEach(cell => {\n    const lastClass = cell.classList[cell.classList.length - 1];\n\n    cell.classList.remove(lastClass);\n    cell.innerHTML = '';\n    gameScore.innerHTML = 0;\n  });\n}\n\nfunction updateInfo(item) {\n  (item.innerHTML !== '')\n    ? item.className = `field-cell field-cell--${item.innerHTML}`\n    : item.className = 'field-cell';\n\n  gameScore.innerHTML = score;\n}\n\nfunction mergeRow() {\n  let mergedTotal;\n\n  for (let i = 0; i < cells.length - 1; i++) {\n    if (cells[i].innerHTML === cells[i + 1].innerHTML\n      && cells[i].parentElement === cells[i + 1].parentElement) {\n      mergedTotal = parseInt(cells[i].innerHTML)\n      + parseInt(cells[i + 1].innerHTML);\n      cells[i].innerHTML = mergedTotal;\n      cells[i + 1].innerHTML = '';\n\n      if (mergedTotal === parseInt(mergedTotal)) {\n        score += mergedTotal;\n      };\n    } else {\n      isPossiblePlay();\n    }\n  }\n  checkIfWin();\n}\n\nfunction mergeColumn() {\n  let mergedTotal;\n\n  for (let i = 0; i < cells.length - 4; i++) {\n    if (cells[i].innerHTML === cells[i + width].innerHTML) {\n      mergedTotal = parseInt(cells[i].innerHTML)\n      + parseInt(cells[i + width].innerHTML);\n      cells[i].innerHTML = mergedTotal;\n      cells[i + width].innerHTML = '';\n\n      if (mergedTotal === parseInt(mergedTotal)) {\n        score += mergedTotal;\n      };\n    } else {\n      isPossiblePlay();\n    }\n  }\n  checkIfWin();\n}\n\nfunction isPossiblePlay() {\n  for (let i = 0; i < cells.length - 4; i++) {\n    if (cells[i].innerHTML === cells[i + width].innerHTML) {\n      return true;\n    }\n  }\n\n  for (let i = 0; i < cells.length - 1; i++) {\n    if (cells[i].innerHTML === cells[i + 1].innerHTML\n      && cells[i].parentElement === cells[i + 1].parentElement) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction moveRight() {\n  for (let i = 0; i < cells.length; i++) {\n    if (i % 4 === 0) {\n      const totalOne = cells[i].innerHTML;\n      const totalTwo = cells[i + 1].innerHTML;\n      const totalThree = cells[i + 2].innerHTML;\n      const totalFour = cells[i + 3].innerHTML;\n      const row = [parseInt(totalOne), parseInt(totalTwo),\n        parseInt(totalThree), parseInt(totalFour)];\n\n      const filteredRow = row.filter(num => num);\n      const zeros = Array(4 - filteredRow.length).fill('');\n      const newRow = zeros.concat(filteredRow);\n\n      cells[i].innerHTML = newRow[0];\n      cells[i + 1].innerHTML = newRow[1];\n      cells[i + 2].innerHTML = newRow[2];\n      cells[i + 3].innerHTML = newRow[3];\n      cells.forEach(item => updateInfo(item));\n    }\n  }\n}\n\nfunction moveLeft() {\n  for (let i = 0; i < cells.length; i++) {\n    if (i % 4 === 0) {\n      const totalOne = cells[i].innerHTML;\n      const totalTwo = cells[i + 1].innerHTML;\n      const totalThree = cells[i + 2].innerHTML;\n      const totalFour = cells[i + 3].innerHTML;\n      const row = [parseInt(totalOne), parseInt(totalTwo),\n        parseInt(totalThree), parseInt(totalFour)];\n\n      const filteredRow = row.filter(num => num);\n      const zeros = Array(4 - filteredRow.length).fill('');\n      const newRow = filteredRow.concat(zeros);\n\n      cells[i].innerHTML = newRow[0];\n      cells[i + 1].innerHTML = newRow[1];\n      cells[i + 2].innerHTML = newRow[2];\n      cells[i + 3].innerHTML = newRow[3];\n      cells.forEach(item => updateInfo(item));\n    }\n  }\n}\n\nfunction moveUp() {\n  for (let i = 0; i < width; i++) {\n    const totalOne = cells[i].innerHTML;\n    const totalTwo = cells[i + width].innerHTML;\n    const totalThree = cells[i + (width * 2)].innerHTML;\n    const totalFour = cells[i + (width * 3)].innerHTML;\n    const column = [parseInt(totalOne), parseInt(totalTwo),\n      parseInt(totalThree), parseInt(totalFour)];\n\n    const filteredColumn = column.filter(num => num);\n    const zeros = Array(4 - filteredColumn.length).fill('');\n    const newColumn = filteredColumn.concat(zeros);\n\n    cells[i].innerHTML = newColumn[0];\n    cells[i + width].innerHTML = newColumn[1];\n    cells[i + (width * 2)].innerHTML = newColumn[2];\n    cells[i + (width * 3)].innerHTML = newColumn[3];\n    cells.forEach(item => updateInfo(item));\n  }\n}\n\nfunction moveDown() {\n  for (let i = 0; i < width; i++) {\n    const totalOne = cells[i].innerHTML;\n    const totalTwo = cells[i + width].innerHTML;\n    const totalThree = cells[i + (width * 2)].innerHTML;\n    const totalFour = cells[i + (width * 3)].innerHTML;\n    const column = [parseInt(totalOne), parseInt(totalTwo),\n      parseInt(totalThree), parseInt(totalFour)];\n\n    const filteredColumn = column.filter(num => num);\n    const zeros = Array(4 - filteredColumn.length).fill('');\n    const newColumn = zeros.concat(filteredColumn);\n\n    cells[i].innerHTML = newColumn[0];\n    cells[i + width].innerHTML = newColumn[1];\n    cells[i + (width * 2)].innerHTML = newColumn[2];\n    cells[i + (width * 3)].innerHTML = newColumn[3];\n    cells.forEach(item => updateInfo(item));\n  }\n}\n\nfunction move() {\n  document.body.addEventListener('keydown', e => {\n    switch (e.key) {\n      case 'ArrowLeft':\n        moveLeft();\n        mergeRow();\n        moveLeft();\n        generateNewCell(cells);\n        break;\n\n      case 'ArrowRight':\n        moveRight();\n        mergeRow();\n        moveRight();\n        generateNewCell(cells);\n        break;\n\n      case 'ArrowUp':\n        moveUp();\n        mergeColumn();\n        moveUp();\n        generateNewCell(cells);\n        break;\n\n      case 'ArrowDown':\n        moveDown();\n        mergeColumn();\n        moveDown();\n        generateNewCell(cells);\n        break;\n    }\n  });\n}\n\nfunction checkIfWin() {\n  for (let i = 0; i < cells.length; i++) {\n    if (cells[i].innerHTML === '2048') {\n      messageWin.classList.remove('hidden');\n      messageStart.classList.add('hidden');\n      messageLose.classList.add('hidden');\n    }\n  }\n}\n\nfunction checkIfGameOver() {\n  let emptyCells = 0;\n\n  for (let i = 0; i < cells.length; i++) {\n    if (cells[i].innerHTML === '') {\n      emptyCells++;\n    }\n  }\n\n  if (emptyCells === 0 && !isPossiblePlay()) {\n    messageLose.classList.remove('hidden');\n    messageWin.classList.add('hidden');\n    messageStart.classList.add('hidden');\n  }\n}\n"]}